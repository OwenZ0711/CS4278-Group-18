name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Checkout repository code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up Node.js (Frontend)
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16' # Adjust Node.js version as needed

    # Install frontend dependencies
    - name: Install dependencies for frontend
      working-directory: ./frontend
      run: npm install

    # Run frontend tests
    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test -- --coverage --watchAll=false
      env:
        CI: true

    # Build frontend
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    # Set up Python (Backend)
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9' # Adjust Python version as needed

    # Set environment variables for RDS connection
    - name: Set RDS environment variables
      run: |
        echo "RDS_HOSTNAME=${{ secrets.RDS_HOSTNAME }}" >> $GITHUB_ENV
        echo "RDS_USERNAME=${{ secrets.RDS_USERNAME }}" >> $GITHUB_ENV
        echo "RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}" >> $GITHUB_ENV

    # # Set additional environment variables (Flask, Spotify, etc.)
    # - name: Set additional environment variables
    #   run: |
    #     echo "FLASK_SECRET_KEY=${{ secrets.FLASK_SECRET_KEY }}" >> $GITHUB_ENV
    #     echo "SPOTIFY_CLIENT_ID=${{ secrets.SPOTIFY_CLIENT_ID }}" >> $GITHUB_ENV
    #     echo "SPOTIFY_CLIENT_SECRET=${{ secrets.SPOTIFY_CLIENT_SECRET }}" >> $GITHUB_ENV
  
    # Install Python dependencies
    - name: Install dependencies for backend
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Run backend tests
    - name: Run backend tests
      working-directory: ./backend
      run: pytest

    # Upload coverage results for backend
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: ./backend/coverage.xml
        flags: unittests
        name: codecov-umbrella
